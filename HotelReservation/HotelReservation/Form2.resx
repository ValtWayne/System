<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CDuA4q7Tp/zCde+wvyhIhcJO0dlwf//Z
</value>
  </data>
</root>